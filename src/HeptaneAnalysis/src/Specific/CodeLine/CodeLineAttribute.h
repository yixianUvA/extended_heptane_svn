/* ------------------------------------------------------------------------------------

   Copyright IRISA, 2003-2017

   This file is part of Heptane, a tool for Worst-Case Execution Time (WCET) estimation.
   APP deposit IDDN.FR.001.510039.000.S.P.2003.000.10600

   Heptane is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   Heptane is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details (COPYING.txt).

   See CREDITS.txt for credits of authorship

   ----------------------------------------------------------------------------------- */

/*****************************************************************
                             CodeLineAttribute
	This is a sharedAttribute generated by the MIPS address analysis

	This attribute is present for all asm instruction to indicate
	which line and which source code file is concerned with this
        asm insctruction.
	It is a serialisable attribute


*****************************************************************/


#include <utility>
#include <string>
#include <vector>
#include <assert.h>
#include "CfgLib.h"

using namespace std;
using namespace cfglib;


#ifndef CODELINEATTRIBUTE_H
#define CODELINEATTRIBUTE_H


/**
 * The CodeLineAttribute class is attached to each asm instruction of
 * a program by the CodeLine analysis.
 *
 * This attribute locates an asm instruction in the source code.
 * It gives the file name and the line number where the asm instruction
 * can be found.
 */
class CodeLineAttribute:public SerialisableAttribute
{

  string file;
  long line;

 public:
  CodeLineAttribute ();
  CodeLineAttribute (string & f, long l);
  ~CodeLineAttribute ();

  /** return the file name as a string */
  string getFile (void);
  /** return the line number as a long */
  long getLine (void);

  /** set file name with the string f */
  void setFile (string & f);
  /** set line number with the long l */
  void setLine (long l);


  /** Serialisation function */
  ostream & WriteXml (ostream & os, Handle & hand);
  void ReadXml (XmlTag const *tag, Handle & hand);

  SerialisableAttribute *create (void);

  /** Cloning function */
  CodeLineAttribute *clone (void);

  /** debug */
  void Print (ostream & os);
};

#endif
